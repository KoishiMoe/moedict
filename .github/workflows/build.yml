name: Build

on:
    push:
        paths-ignore:
            - "last_update"
            - "README.md"
            - "LICENSE"
    schedule:
        - cron: "0 0 * * 1"
        - cron: "0 0 10 * *"
    workflow_dispatch:

jobs:
    build:
        runs-on: ubuntu-latest

        steps:
            - uses: actions/checkout@v4

            - name: Check version
              run: |
                latest=$(curl -s $GITHUB_API_URL/repos/outloudvi/mw2fcitx/releases/latest | jq -r .tag_name)
                echo "Latest release is $latest"
                last_update=$(cat last_update)
                echo "Last update is $last_update"
                if [ "$latest" = "$last_update" ]; then
                    echo "No new release, skip following steps"
                    echo "NEW_RELEASE=false" >> $GITHUB_ENV
                else
                    echo "New release found, continue"
                    echo "NEW_RELEASE=true" >> $GITHUB_ENV
                    echo $latest > last_update
                    echo "latest=$latest" >> $GITHUB_ENV
                fi
            
            - name: Get dict
              if: ${{ env.NEW_RELEASE == 'true' }}
              run: |
                wget https://github.com/outloudvi/mw2fcitx/releases/latest/download/moegirl.dict.yaml

            - name: Convert
              if: ${{ env.NEW_RELEASE == 'true' }}
              run: |
                python ./convert.py ./moegirl.dict.yaml ./gboard.zip

            - name: Publish
              env:
                GH_TOKEN: ${{ github.token }}
              if: ${{ env.NEW_RELEASE == 'true' }}
              run: |
                gh release create $latest ./gboard.zip -t $latest
            
            - name: Update last_update
              if: ${{ env.NEW_RELEASE == 'true' }}
              run: |
                git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
                git config --global user.name "github-actions[bot]"
                git add last_update
                git commit -m "$(date +'%Y-%m-%d') update"
                git push
            
